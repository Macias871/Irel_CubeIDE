/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef MENU_BUTTONS_CONTAINER_HPP
#define MENU_BUTTONS_CONTAINER_HPP

#include <gui/common/FrontendApplication.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/widgets/Button.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <touchgfx/Utils.hpp>

typedef struct TGFX_menu_struct TGFX_Menu_t;

struct TGFX_menu_struct {

	const char * name;
	TEXTS  Ttext;
	TGFX_Menu_t * next;
	TGFX_Menu_t * prev;
	TGFX_Menu_t * child;
	TGFX_Menu_t * parent;
	void (*menu_function)(void);


};


class Menu_buttons_container : public touchgfx::Container
{
public:
    Menu_buttons_container();
    virtual ~Menu_buttons_container();
    virtual void initialize();

    void setupListElement( TEXTS iconTextID, TGFX_Menu_t Menu);
    TGFX_Menu_t TGFX_menu_elemnt;

    void boxClickedHandler(const Button& b, const ClickEvent& e);

    //Method to set the view callback
	void setViewCallback(GenericCallback<uint8_t>& callback);

    void setType(uint8_t _type);


protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }



    /*
     * Member Declarations
     */
    touchgfx::Button button1;
    touchgfx::TextArea textarea;

private:

	//Internal custom container callback for the box click listener
	Callback<Menu_buttons_container, const Button&, const ClickEvent&> buttonClickedCallback;

	//Store pointer to view callback
	GenericCallback<uint8_t>* viewCallback;

	//type of custom container
	uint8_t type;

};

#endif // MENU_BUTTONS_CONTAINER_HPP
