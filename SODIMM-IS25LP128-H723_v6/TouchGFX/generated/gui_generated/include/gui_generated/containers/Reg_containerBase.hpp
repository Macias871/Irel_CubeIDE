/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef REG_CONTAINERBASE_HPP
#define REG_CONTAINERBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/widgets/Button.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>

class Reg_containerBase : public touchgfx::Container
{
public:
    Reg_containerBase();
    virtual ~Reg_containerBase();
    virtual void initialize();

    /*
     * Virtual Action Handlers
     */
    virtual void Fine_up()
    {
        // Override and implement this function in Reg_container
    }

    virtual void Fine_dn()
    {
        // Override and implement this function in Reg_container
    }

    virtual void Coarse_up()
    {
        // Override and implement this function in Reg_container
    }

    virtual void Coarse_dn()
    {
        // Override and implement this function in Reg_container
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Button button_up_small;
    touchgfx::Button button_dn_small;
    touchgfx::Button button_up_big;
    touchgfx::Button button_dn_big;
    touchgfx::TextAreaWithOneWildcard Value_t;

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<Reg_containerBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // REG_CONTAINERBASE_HPP
